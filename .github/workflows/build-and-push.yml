name: Build and Push Docker Images

on:
    push:
        branches:
            - master
            - develop
    pull_request:
        branches:
            - master
            - develop

env:
    REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}
    REGISTRY_USERNAME: ${{ secrets.ACR_USERNAME }}
    REGISTRY_PASSWORD: ${{ secrets.ACR_PASSWORD }}

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                service:
                    - name: frontend
                      dockerfile: ./apps/rncp_PWA_front/Dockerfile
                      context: .
                    - name: api-gateway
                      dockerfile: ./apps/rncp_api/Dockerfile
                      context: .
                    - name: user-service
                      dockerfile: ./apps/rncp_api/Dockerfile.user-service
                      context: .
                    - name: auth-service
                      dockerfile: ./apps/rncp_api/Dockerfile.auth-service
                      context: .

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set environment suffix
              id: env
              run: |
                  if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
                    echo "suffix=prod" >> $GITHUB_OUTPUT
                    echo "environment=production" >> $GITHUB_OUTPUT
                  elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
                    echo "suffix=test" >> $GITHUB_OUTPUT
                    echo "environment=test" >> $GITHUB_OUTPUT
                  else
                    echo "suffix=pr-${{ github.event.number }}" >> $GITHUB_OUTPUT
                    echo "environment=pr" >> $GITHUB_OUTPUT
                  fi

            - name: Login to Azure Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ env.REGISTRY_USERNAME }}
                  password: ${{ env.REGISTRY_PASSWORD }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/rncp-${{ matrix.service.name }}
                  tags: |
                      type=ref,event=branch,suffix=-${{ steps.env.outputs.suffix }}
                      type=ref,event=pr,suffix=-${{ steps.env.outputs.suffix }}
                      type=sha,prefix=${{ steps.env.outputs.suffix }}-
                      type=raw,value=latest-${{ steps.env.outputs.suffix }},enable={{is_default_branch}}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: ${{ matrix.service.context }}
                  file: ${{ matrix.service.dockerfile }}
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    trigger-deployment:
        needs: build-and-push
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')

        steps:
            - name: Set environment
              id: env
              run: |
                  if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
                    echo "environment=production" >> $GITHUB_OUTPUT
                  else
                    echo "environment=test" >> $GITHUB_OUTPUT
                  fi

            - name: Trigger deployment workflow
              uses: actions/github-script@v7
              with:
                  script: |
                      github.rest.actions.createWorkflowDispatch({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        workflow_id: 'deploy-${{ steps.env.outputs.environment }}.yml',
                        ref: context.ref,
                        inputs: {
                          image_tag: context.sha.substring(0, 7)
                        }
                      });
