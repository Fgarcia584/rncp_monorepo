name: Deploy Azure Infrastructure

on:
    workflow_dispatch:
        inputs:
            environment:
                description: 'Environment to deploy (test or prod)'
                required: true
                default: 'test'
                type: choice
                options:
                    - test
                    - prod

env:
    AZURE_RESOURCE_GROUP: rg-rncp-${{ inputs.environment }}
    AZURE_LOCATION: westeurope

jobs:
    deploy-infrastructure:
        runs-on: ubuntu-latest
        environment: ${{ inputs.environment }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Login to Azure
              uses: azure/login@v1
              with:
                  creds: ${{ inputs.environment == 'prod' && secrets.AZURE_CREDENTIALS_PROD || secrets.AZURE_CREDENTIALS_TEST }}

            - name: Create Resource Group
              run: az group create --name ${{ env.AZURE_RESOURCE_GROUP }} --location ${{ env.AZURE_LOCATION }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }}

            - name: Deploy Bicep template
              id: deploy
              run: DEPLOYMENT_OUTPUT=$(az deployment group create
                  --resource-group ${{ env.AZURE_RESOURCE_GROUP }}
                  --template-file azure/infrastructure.bicep
                  --parameters
                  environment=${{ inputs.environment }}
                  location=${{ env.AZURE_LOCATION }}
                  postgresqlAdminUsername=${{ inputs.environment == 'prod' && secrets.POSTGRES_USER_PROD || secrets.POSTGRES_USER_TEST }}
                  postgresqlAdminPassword=${{ inputs.environment == 'prod' && secrets.POSTGRES_PASSWORD_PROD || secrets.POSTGRES_PASSWORD_TEST }}
                  databaseName=${{ inputs.environment == 'prod' && secrets.POSTGRES_DB_PROD || secrets.POSTGRES_DB_TEST }}
                  --query 'properties.outputs'
                  --output json)

                  echo "deployment_output=$DEPLOYMENT_OUTPUT" >> $GITHUB_OUTPUT

            - name: Display deployment results
              run: echo "Infrastructure deployment completed for ${{ inputs.environment }} environment"
                  echo "PostgreSQL Server $(echo '${{ steps.deploy.outputs.deployment_output }}' | jq -r '.postgresqlServerName.value')"
                  echo "Redis Cache redis-rncp-${{ inputs.environment }}"
                  echo "Storage Account $(echo '${{ steps.deploy.outputs.deployment_output }}' | jq -r '.storageAccountName.value')"

            - name: Test database connectivity
              run:
                  CONNECTION_STRING=$(echo '${{ steps.deploy.outputs.deployment_output }}' | jq -r '.postgresqlConnectionString.value')
                  echo "Testing database connectivity..."

            - name: Update GitHub Environment Secrets
              run: echo"Update the following secrets in your GitHub environment"
                  echo "DATABASE_URL_${{ inputs.environment }} $(echo '${{ steps.deploy.outputs.deployment_output }}' | jq -r '.postgresqlConnectionString.value')"
                  echo "REDIS_URL_${{ inputs.environment  }} $(echo '${{ steps.deploy.outputs.deployment_output }}' | jq -r '.redisConnectionString.value')"
                  echo "APPINSIGHTS_INSTRUMENTATIONKEY_${{ inputs.environment }} $(echo '${{ steps.deploy.outputs.deployment_output }}' | jq -r '.applicationInsightsInstrumentationKey.value')"
